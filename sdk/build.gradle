plugins {
    // Apply the groovy Plugin to add support for Groovy.
    id 'groovy'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'maven-publish'
    id 'signing'
}

version = '0.0.1-SNAPSHOT'
group = 'io.github.bijit-mondal'

publishing {
    publications {
        sdk(MavenPublication) {
            from components.java
            pom {
                name = 'SuperTokens Java SDK'
                description = 'Java SDK for SuperTokens'
                url = 'https://github.com/Bijit-Mondal/supertokens-java'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'bijit-mondal'
                        name = 'Bijit Mondal'
                        email = 'bijitmondal3011@rediffmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Bijit-Mondal/supertokens-java.git'
                    developerConnection = 'scm:git:ssh://git@github.com:Bijit-Mondal/supertokens-java.git'
                    url = 'https://github.com/Bijit-Mondal/supertokens-java'
                }
            }
        }
    }
    repositories {
        maven {
            name = "oss"
            def releasesRepoUrl = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/")
            def snapshotsRepoUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            url = version.toString().endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = project.findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.9'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'jakarta.mail:jakarta.mail-api:2.1.3'
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.8.2'
}

testing {
    suites {
        test {
            // Use Spock test framework
            useSpock('2.2-groovy-3.0')
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
